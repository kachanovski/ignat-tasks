{"version":3,"sources":["components/NavBar/NavBar.module.css","components/PreJunior/MessageComponent/MessageComponent.module.css","components/PreJunior/PreJunior.module.css","common/Input/Input.module.css","components/PreJunior/InputComponent/InputComponent.module.css","common/Checkbox/Checkbox.module.css","components/NavBar/NavBar.tsx","components/PreJunior/MessageComponent/MessageComponent.tsx","common/Button/Button.tsx","components/PreJunior/TasksComponent/TasksComponent.tsx","common/Input/Input.tsx","components/PreJunior/InputComponent/InputComponent.tsx","common/Checkbox/Checkbox.tsx","components/PreJunior/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","components/Junior/FirstTask/FirstTask.tsx","components/Junior/Junior.tsx","components/Junior+/Junior+.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","className","style","navBar","dropdown","dropbtn","dropdownContent","navBarItem","to","MessageComponent","props","messageComponent","photo","messageBox","name","textMessage","text","timeStyle","time","Button","classFor","value","onClick","TasksComponent","changeFilter","tasks","map","t","key","id","title","priority","removeTask","Input","onChange","autoFocus","onBlur","onKeyPress","e","addItem","input","error","errorMessage","InputComponent","useState","setValue","setError","count","setCount","trim","alert","inputComponent","currentTarget","onPressEnter","Checkbox","checkbox","type","PreJunior","preJuniorPage","colulm","colulmEven","EditableSpan","editMode","setEditMode","Task","saveState","stateTask","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","Junior","JuniorPlus","state","App","setTasks","newTasks","filter","setFilter","tasksFiltered","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9cdedc94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__3fN5h\",\"dropbtn\":\"NavBar_dropbtn__2-EKd\",\"dropdown\":\"NavBar_dropdown__1C6Zj\",\"dropdownContent\":\"NavBar_dropdownContent__2w6Ja\",\"navBarItem\":\"NavBar_navBarItem__1U5PA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"MessageComponent_messageComponent__1ueJm\",\"messageBox\":\"MessageComponent_messageBox__2oDdS\",\"photo\":\"MessageComponent_photo__AsXih\",\"name\":\"MessageComponent_name__1HE8T\",\"textMessage\":\"MessageComponent_textMessage__t3FS1\",\"timeStyle\":\"MessageComponent_timeStyle__2mEDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preJuniorPage\":\"PreJunior_preJuniorPage__2a3xq\",\"column\":\"PreJunior_column__17aVa\",\"columnEven\":\"PreJunior_columnEven__1dKbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__-tJim\",\"errorMessage\":\"Input_errorMessage__ypJos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputComponent\":\"InputComponent_inputComponent__2Uvat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__1rg97\"};","import React from 'react';\nimport style from './NavBar.module.css'\nimport {NavLink} from 'react-router-dom';\n\n\nfunction Navbar() {\n\n    return (\n        <div className={style.navBar}>\n            <div className={style.dropdown}>\n                <button className={style.dropbtn}>MENU</button>\n                <div className={style.dropdownContent}>\n                    <div className={style.navBarItem}>\n                        <NavLink to=\"/prejunior\">PreJunior</NavLink>\n                    </div>\n                    <div className={style.navBarItem}>\n                        <NavLink to=\"/junior\">Junior</NavLink>\n                    </div>\n                    <div className={style.navBarItem}>\n                        <NavLink to=\"/junior+\">JuniorPlus</NavLink>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport '../../../App.css';\nimport style from './MessageComponent.module.css'\n\ntype MessagePropsType = {\n    name: string\n    text: string\n    time: string\n}\n\n\nfunction MessageComponent(props: MessagePropsType) {\n\n    return (\n        <div className={style.messageComponent}>\n            <div className={style.photo}>avatar</div>\n            <div className={style.messageBox}>\n                <div className={style.name}>{props.name}</div>\n                <div className={style.textMessage}>{props.text}</div>\n                <div className={style.timeStyle}>{props.time} </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default MessageComponent;\n","import React from 'react';\r\nimport './Button.css'\r\n\r\n\r\nfunction Button(props: any) {\r\n\r\n    let classFor = props.value === 'X' ? \"deleteButton\" : \"button\"\r\n\r\n    return (\r\n\r\n            <button onClick={props.onClick}\r\n                className={classFor}>{props.value}\r\n            </button>\r\n\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport {FilterValueType, TasksType} from \"../../../App\";\nimport Button from \"../../../common/Button/Button\";\n\ntype TasksPropsType = {\n    tasks: Array<TasksType>\n    removeTask: (id: number) => void\n    changeFilter: (priority: FilterValueType) => void\n}\n\n\nfunction TasksComponent(props: TasksPropsType) {\n\n    const onClickAllHandler = () => props.changeFilter(\"all\")\n    const onClickHigthHandler = () => props.changeFilter(\"higth\")\n    const onClickMiddleHandler = () => props.changeFilter(\"middle\")\n    const onClickLowHandler = () => props.changeFilter(\"low\")\n\n    return (\n        <div>\n            <div>\n                <h3>TasksList</h3>\n            </div>\n\n            <Button value=\"all\" onClick={onClickAllHandler}/>\n            <Button value=\"higth\" onClick={onClickHigthHandler}/>\n            <Button value=\"middle\" onClick={onClickMiddleHandler}/>\n            <Button value=\"low\" onClick={onClickLowHandler}/>\n\n            <div>\n                {props.tasks.map(t => {\n                    const removeTask = () => {\n                        props.removeTask(t.id)\n                    }\n\n                    return (\n                        <li key={t.id}><span>{t.title}</span> <span> - {t.priority}</span>\n                            <Button value='X' onClick={removeTask}/>\n                        </li>\n                    )\n                })}\n            </div>\n\n\n        </div>\n\n    );\n}\n\nexport default TasksComponent;\n","import React, {KeyboardEvent} from 'react';\r\nimport style from './Input.module.css'\r\n\r\n\r\nfunction Input(props: any) {\r\n\r\n    const onKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            props.addItem()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={props.value}\r\n                   onChange={props.onChange}\r\n                   autoFocus={true}\r\n                   onBlur={props.onBlur}\r\n                   onKeyPress={onKeyPress}\r\n                   className={style.input}\r\n            />\r\n            {props.error && <div className={style.errorMessage}>{props.error}</div>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent, useState} from 'react';\nimport Input from \"../../../common/Input/Input\";\nimport style from './InputComponent.module.css'\nimport Button from \"../../../common/Button/Button\";\n\ntype PropsInputComponent = {}\n\nfunction InputComponent(props: PropsInputComponent) {\n\n    let [value, setValue] = useState('')\n    let [error, setError] = useState<string | null>(null)\n    let [count, setCount] = useState(0)\n\n    const addItem = () => {\n        if (value.trim() !== \"\") {\n            alert(\"Hello \" + value)\n        } else {\n            setError(\"Введите значение\")\n        }\n        setValue('')\n        setCount(count + 1)\n    }\n\n    function onChangeValue (e:ChangeEvent<HTMLInputElement>) {\n        setValue(e.currentTarget.value)\n    }\n\n\n    return (\n        <div className={style.inputComponent}>\n            <Input error={error}\n                   addItem={addItem}\n                   value={value}\n                   onChange={onChangeValue}\n                   onPressEnter={addItem}/>\n            <Button value=\"ADD\" onClick={addItem}/>\n            <div>\n                <span>{count}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default InputComponent;\n","import React from 'react';\r\nimport style from './Checkbox.module.css'\r\n\r\n\r\nfunction Checkbox() {\r\n\r\n    return (\r\n        <div>\r\n            <input className={style.checkbox} type='checkbox'/>123\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\nimport style from './PreJunior.module.css'\nimport {FilterValueType, TasksType} from \"../../App\";\nimport MessageComponent from \"./MessageComponent/MessageComponent\";\nimport TasksComponent from \"./TasksComponent/TasksComponent\";\nimport InputComponent from \"./InputComponent/InputComponent\";\nimport Checkbox from \"../../common/Checkbox/Checkbox\";\nimport Button from \"../../common/Button/Button\";\nimport Input from \"../../common/Input/Input\";\n\n\ntype PropsPreJunior = {\n    name: string\n    time: string\n    text: string\n    tasks: Array<TasksType>\n    changeFilter: (priority: FilterValueType) => void\n    removeTask: (id: number) => void\n}\n\nfunction PreJunior(props: PropsPreJunior) {\n\n    return (\n        <div className={style.preJuniorPage}>\n\n            <div className={style.colulm}>\n                1\n                <MessageComponent name={props.name} time={props.time} text={props.text}/>\n            </div>\n            <div className={style.colulmEven}>\n                2\n                <TasksComponent tasks={props.tasks}\n                                changeFilter={props.changeFilter}\n                                removeTask={props.removeTask}/>\n            </div>\n            <div className={style.colulm}>\n                3\n                <InputComponent />\n            </div>\n            <div className={style.colulmEven}>\n                4\n                <Checkbox/>\n                <Button value=\"ANY\" />\n                <Input />\n            </div>\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React, {useState} from 'react';\r\n\r\nfunction EditableSpan(props:any) {\r\n\r\n    let [editMode, setEditMode] = useState(true)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {editMode\r\n                ? <span onClick={activateEditMode}>{props.value}</span>\r\n                : <input onChange={props.onChange} value={props.value} onBlur={deactivateEditMode} />}\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditableSpan;\r\n","import React, {ChangeEvent, useState} from 'react';\nimport EditableSpan from '../../../common/EditableSpan/EditableSpan';\nimport Button from \"../../../common/Button/Button\";\n\ntype StateType = {\n    x: string\n    y: number\n}\n\nfunction Task() {\n\n    let [value, setValue] = useState('1')\n    let [state, setState] = useState<Array<StateType>>([])\n\n    const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value)\n    }\n\n\n    //сохранить\n    function saveState<T>(key: string, stateTask: T) {\n        const stateAsString = JSON.stringify(stateTask);\n        localStorage.setItem(key, stateAsString)\n    }\n\n    //получение сохраненного\n    function restoreState<T>(key: string, defaultState: T) {\n        const stateAsString = localStorage.getItem(key);\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n        return defaultState;\n    }\n\n    // сохраняем объект типа StateType в ячейке \"test\"\n    saveState<StateType>(\"test\", {x: value, y: 1});\n    debugger\n    // получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\n    const stateTask: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n\n    return (\n        <div>\n            <EditableSpan value={value} onChange={onChangeValue}/>\n            <Button onClick={saveState} value=\"save\"/>\n            <Button onClick={restoreState} value=\"mode\"/>\n        </div>\n    );\n}\n\nexport default Task;\n","import React from 'react';\nimport Task from './FirstTask/FirstTask';\n\nfunction Junior() {\n\n    return (\n        <div >\n              <Task />\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from 'react';\n\nfunction JuniorPlus() {\n\n    return (\n        <div >\n         JUNIOR+\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Navbar from './components/NavBar/NavBar';\nimport PreJunior from \"./components/PreJunior/PreJunior\";\nimport Junior from './components/Junior/Junior';\nimport JuniorPlus from \"./components/Junior+/Junior+\";\nimport {HashRouter, Route} from 'react-router-dom'\n\nexport type FilterValueType = \"all\" | \"higth\" | \"low\" | \"middle\"\n\nexport type TasksType = {\n    id: number\n    title: string\n    priority: FilterValueType\n}\n\nlet state = {\n    name: 'Aliaksander K.',\n    text: \"it-incubator\",\n    time: \"20:00\"\n}\n\nfunction App() {\n\n    let [tasks, setTasks] = useState<Array<TasksType>>([\n        {id: 1, title: 'eat', priority: 'low'},\n        {id: 2, title: 'eat', priority: 'middle'},\n        {id: 3, title: 'eat', priority: 'higth'},\n        {id: 4, title: 'eat', priority: 'low'},\n        {id: 5, title: 'eat', priority: 'middle'},\n    ])\n\n    function removeTask(id: number) {\n        let newTasks = tasks.filter(t => t.id !== id)\n        setTasks(newTasks)\n    }\n\n    let [filter, setFilter] = useState<FilterValueType>(\"all\")\n\n    let tasksFiltered = tasks\n    switch (filter) {\n        case \"all\":\n            tasksFiltered = tasks\n            break\n        case \"higth\":\n            tasksFiltered = tasks.filter(t => t.priority === \"higth\");\n            break\n        case \"middle\":\n            tasksFiltered = tasks.filter(t => t.priority === \"middle\");\n            break\n        case \"low\":\n            tasksFiltered = tasks.filter(t => t.priority === \"low\");\n            break\n\n    }\n\n    function changeFilter(priority: FilterValueType) {\n        setFilter(priority)\n    }\n\n\n\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <div>\n                    <Navbar/>\n                </div>\n                <div>\n                    <Route exact path='/prejunior' render={() =>\n                        <PreJunior name={state.name}\n\n                                   text={state.text}\n                                   time={state.time}\n                                   tasks={tasksFiltered}\n                                   changeFilter={changeFilter}\n                                   removeTask={removeTask}/>\n                    }/>\n\n                    <Route exact path='/junior' render={() =>\n                        <Junior/>}/>\n\n                    <Route exact path='/junior+' render={() =>\n                        <JuniorPlus/>}/>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}